# JsonTest API
# Developer Susinda
# Revision 1, Date 2023-01-06


location /invoice/ {
    # Policy configuration here (authentication, rate limiting, logging...)
    #
    access_log /var/log/nginx/jsontest_api.log main;
    proxy_ssl_server_name on;

    #to tell that it should meet BOTH ip address and password rules
    satisfy all;    

    allow 125.209.132.137/32;
    allow 10.0.0.4/32;
    allow 127.0.0.1/32;
    allow 20.167.48.133/32;
    deny all;

    auth_basic           "Administratorâ€™s Area";
    auth_basic_user_file /etc/nginx/secrets/.htpasswd;

    location = /invoice/_validate_apikey1 {
        internal;
	
 	if ($http_apikey = "") {
            return 401; # Unauthorized
        }
        if ($api_client_name = "") {
            return 405; # Forbidden
        }

	if ($api_client_name != "casella") {
            return 401; # Users other than casella is unauthorized, which is defined by their key
        }
        return 204; # OK (no content)
    }


    location = /invoice/_validate_apikey2 {
        internal;
        
        if ($http_apikey = "") {
            return 401; # Unauthorized
        }
        if ($api_client_name = "") {
            return 404; # Forbidden
        }
        
        if ($api_client_name != "user2") {
            return 401; # Users other than user2 is unauthorized, which is defined by their key
        }
        return 204; # OK (no content)
    }

    # URI routing
    
    #All exposed approch Broad definition
    #location  /invoice/posts {
    #    proxy_ssl_server_name on;
    #    proxy_pass https://jsonplaceholder.typicode.com/users;
    #}

    # albums is public no need authentication
    location /invoice/albums {
         auth_basic off;
         allow all;
         limit_req zone=tenpersec burst=5 nodelay;
         proxy_pass https://jsonplaceholder.typicode.com/albums;
    }

    # posts are secured, needs basic auth
    location /invoice/posts {
         allow all;
         limit_req zone=tenpersec burst=5 nodelay;
         proxy_pass https://jsonplaceholder.typicode.com/posts;
    }    
   
    # users are secured should have authentication and authorization
    location = /invoice/users/1 {
        #auth_basic off;
        allow all;
        limit_req zone=tenpersec;
        auth_request /invoice/_validate_apikey1;
    	proxy_pass https://jsonplaceholder.typicode.com/users/1;
    }

    # users are secured should have authentication and authorization
    location = /invoice/users/2 {
        allow all;
        limit_req zone=tenpersec;
        auth_request /invoice/_validate_apikey2;
        proxy_pass https://jsonplaceholder.typicode.com/users/2;
    }

    #url rewrite test
    location ~ ^/invoice/posts/[^/]+$  { 
        #use uri rewtrite to remove the invoice part from the upstream url
	allow all;
        rewrite /invoice/(.*) /$1  break;
        proxy_pass https://jsonplaceholder.typicode.com;
    }

    # swagger definition is only avaialbe from some IPs
    location = /invoice/swagger.json {
         allow all;
         alias /etc/nginx/api_conf.d/invoice/swagger.json;
    }

    # try out is public

    location /invoice/try_out/ {
         auth_basic off;
         allow all;
         alias /etc/nginx/api_conf.d/invoice/;
    }

    return 404; # Catch-all
}
